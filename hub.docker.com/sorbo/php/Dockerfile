#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "update.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#
FROM php:7.2-fpm

RUN set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends --no-install-suggests \
        g++ \
        git \
        golang \
        libfreetype6-dev \
        libicu-dev \
        libjpeg62-turbo-dev \
        libpng-dev \
        libxml2-dev \
        libxslt-dev \
        libzip-dev \
        unzip \
        zip \
        ; \
    savedAptMark="$(apt-mark showmanual)"; \
    docker-php-ext-configure gd \
        --with-gd \
        --with-freetype-dir=/usr/include/ \
        --with-png-dir=/usr/include/ \
        --with-jpeg-dir=/usr/include/; \
    docker-php-ext-install -j$(nproc) \
        bcmath \
        gd \
        intl \
        opcache \
        pdo_mysql \
        soap \
        xsl \
        zip \
        ; \
    rm -rf /var/lib/apt/lists/*; \
# reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
    apt-mark auto '.*' > /dev/null; \
    apt-mark manual $savedAptMark; \
    find /usr/local -type f -executable -exec ldd '{}' ';' \
        | awk '/=>/ { print $(NF-1) }' \
        | sort -u \
        | xargs -r dpkg-query --search \
        | cut -d: -f1 \
        | sort -u \
        | xargs -r apt-mark manual \
    ; \
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

RUN set -eux; \
    pecl update-channels; \
    printf "\n" | pecl install redis xdebug; \
    docker-php-ext-enable redis; \
    rm -rf /tmp/* $HOME/.pearrc

RUN set -eux; \
    mkdir $HOME/go; \
    export GOPATH=$HOME/go; \
    export PATH=$PATH:$GOPATH/bin; \
    go get github.com/mailhog/mhsendmail; \
    go clean

##<autogenerated>##
ENV N98_URL "https://files.magerun.net/n98-magerun.phar"

RUN set -eux; \
    curl -o /usr/bin/n98-magerun $N98_URL; \
    chmod +x /usr/bin/n98-magerun
##</autogenerated>##

ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_HOME /root/.composer/

RUN set -eux; \
    EXPECTED_SIGNATURE="$(curl -L https://composer.github.io/installer.sig)"; \
    php -r "copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');"; \
    ACTUAL_SIGNATURE="$(php -r "echo hash_file('SHA384', '/tmp/composer-setup.php');")"; \
    if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]; then \
        >&2 echo 'ERROR: Invalid installer signature'; \
        rm /tmp/composer-setup.php; \
        exit 1; \
    fi; \
    php /tmp/composer-setup.php --quiet --install-dir=/usr/bin --filename=composer; \
    composer global require hirak/prestissimo; \
    composer clear-cache; \
    rm -rf /tmp/*

ENV IONCUBE_URL "http://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz"

RUN set -eux; \
    curl -o /tmp/ioncube_loaders.tar.gz $IONCUBE_URL; \
    tar -C /tmp -zxf /tmp/ioncube_loaders.tar.gz; \
    extensionFile="ioncube_loader_lin_7.2.so"; \
    mv "/tmp/ioncube/$extensionFile" "$(php -r 'echo ini_get("extension_dir");')"; \
    rm -rf /tmp/*

WORKDIR /var/www/html
EXPOSE 9000
CMD ["php-fpm"]

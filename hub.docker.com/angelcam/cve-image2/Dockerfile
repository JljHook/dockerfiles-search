# Dockerfile for cve-image
# - 3rd party libraries and similar stuff
# - compilation takes long
# - changes are unlike


#take clean debian - 64bit is default
FROM debian:wheezy


#prepare installation
RUN cd /root \
 && mkdir tmp \
 && cd /root/tmp \
 && apt-get update \
 && apt-get -y install time apt-utils wget build-essential python-dev ca-certificates unzip cmake curl


#install boost
RUN cd /root/tmp/ \
 && wget http://vorboss.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz \
 && apt-get -y install libz-dev libbz2-dev \
 && tar -zxvf boost_1_59_0.tar.gz \
 && cd boost_1_59_0 \
 && ./bootstrap.sh \
 && ./b2 link=shared variant=release threading=multi \
 && ./b2 install \
 && rm -r /root/tmp/*


#install ffmpeg
# 1) dependencies
# 2) yasm
# 3) libx264
# 4) fdk-aac
# 5) libmp3lame
# 6) opus
# 7) libvpx
# 8) ffmpeg
RUN cd /root/tmp/ \
 && mkdir ffmpeg \
\
 && apt-get -y install autoconf automake libass-dev libfreetype6-dev libgpac-dev \
  libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libx11-dev \
  libxext-dev libxfixes-dev pkg-config texi2html zlib1g-dev \
\
 && mkdir /root/tmp/ffmpeg/ffmpeg_sources \
\
 && cd /root/tmp/ffmpeg/ffmpeg_sources/ \
 && wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz \
 && tar xzvf yasm-1.3.0.tar.gz \
 && cd yasm-1.3.0 \
 && ./configure --enable-shared --disable-static \
 && make \
 && make install \
\
 && apt-get -y install libx264-dev \
\
 && cd /root/tmp/ffmpeg/ffmpeg_sources/ \
 && wget -O fdk-aac.zip https://github.com/mstorsjo/fdk-aac/zipball/master \
 && unzip fdk-aac.zip \
 && cd mstorsjo-fdk-aac* \
 && autoreconf -fiv \
 && ./configure --enable-shared --disable-static \
 && make \
 && make install \
 && make distclean \
\
 && apt-get -y install libmp3lame-dev \
\
 && cd /root/tmp/ffmpeg/ffmpeg_sources/ \
 && wget http://downloads.xiph.org/releases/opus/opus-1.1.tar.gz \
 && tar xzvf opus-1.1.tar.gz \
 && cd opus-1.1/ \
 && ./configure --enable-shared --disable-static \
 && make \
 && make install \
 && make distclean \
\
 && cd /root/tmp/ffmpeg/ffmpeg_sources/ \
 && wget http://webm.googlecode.com/files/libvpx-v1.3.0.tar.bz2 \
 && tar xjvf libvpx-v1.3.0.tar.bz2 \
 && cd libvpx-v1.3.0 \
 && ./configure --enable-shared --disable-static \
 && make \
 && make install \
 && make clean \
\
 && cd /root/tmp/ffmpeg/ffmpeg_sources/ \
 && wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 \
 && tar xjvf ffmpeg-snapshot.tar.bz2 \
 && cd ffmpeg/ \
 && ./configure  --enable-gpl   --enable-libass   --enable-libfdk-aac   --enable-libfreetype \
  --enable-libmp3lame   --enable-libopus   --enable-libtheora   --enable-libvorbis \
  --enable-libvpx   --enable-libx264 --enable-nonfree --enable-shared --disable-static --enable-debug \
 && make \
 && make install \
 && make distclean \
 && hash -r \
 && rm -r /root/tmp/*


#install OpenCV
RUN cd /root/tmp/ \
 && mkdir opencv_sources \
 && cd opencv_sources/ \
 && wget https://codeload.github.com/Itseez/opencv/zip/3.0.0 \
 && unzip 3.0.0 \
 && cd opencv-3.0.0/ \
 && mkdir release \
 && cd release/ \
 && cmake -D WITH_OPENMP=1 -D WITH_OPENCL=1 -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local .. \
 && make \
 && make install \
 && rm -r /root/tmp/*


#google protocol buffer
RUN cd /root/tmp/ \
 && mkdir protobuff \
 && cd protobuff \
 && wget https://protobuf.googlecode.com/svn/rc/protobuf-2.6.0.tar.gz \
 && tar xzvf protobuf-2.6.0.tar.gz \
 && cd protobuf-2.6.0 \
 && ./configure --enable-shared --disable-static \
 && make \
 && make install \
 && rm -r /root/tmp/*


#additional packages and libs
RUN apt-get -y install libcurl4-nss-dev libxml2-dev time


#clean after yourself
RUN rm -r /root/tmp

